{"site":{"posts":[{"draft":false,"categories":[],"layout":"post","title":"Basics Git","description":"What is Git? Know the tool and its basic commands.","date":"2022-06-19 14:01:35 +0200","image":"/resources/posts/basics-git.png","tags":["Git","Guide","Basics"],"slug":"Basics-git","ext":".markdown","excerpt":"<p>In this post I explain what is Git and show you some commands that will help you in your day to day work with this wonderful tool! but first of all…</p>\n","content":"<p>In this post I explain what is Git and show you some commands that will help you in your day to day work with this wonderful tool! but first of all…</p>\n\n<h2 id=\"what-is-git\">What is Git?</h2>\n\n<blockquote>\n  <p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency!</p>\n</blockquote>\n\n<p>It is generally used for source code management in software development.</p>\n<ul>\n  <li>Git is used to tracking changes in the source code.</li>\n  <li>The distributed version control tool is used for source code management.</li>\n  <li>It allows multiple developers to work together.</li>\n  <li>It supports non-linear development through its thousands of parallel branches.</li>\n</ul>\n\n<p><img src=\"https://media.giphy.com/media/kH6CqYiquZawmU1HI6/giphy.gif\" alt=\"Git\" width=\"1200\" height=\"900\" /></p>\n\n<h2 id=\"features-of-git\">Features of Git</h2>\n<ul>\n  <li>Tracks history</li>\n  <li>Free and open source</li>\n  <li>Supports non-linear development</li>\n  <li>Creates backups</li>\n  <li>Scalable</li>\n  <li>Supports collaboration</li>\n  <li>Branching is easier</li>\n  <li>Distributed development</li>\n</ul>\n\n<h2 id=\"git-workflow\">Git Workflow</h2>\n\n<p><img src=\"/resources/posts/git-workflow.jpg\" alt=\"Git Workflow\" width=\"1200\" height=\"900\" /></p>\n\n<p>The Git workflow is divided into three states:</p>\n\n<ul>\n  <li><strong>Working directory</strong> - Modify files in your working directory.</li>\n  <li><strong>Staging area</strong> (Index) - Stage the files and add snapshots of them to your staging area.</li>\n  <li><strong>Git directory</strong> (Repository) - Perform a commit that stores the snapshots permanently to your Git directory. Checkout any existing version, make changes, stage them and commit.</li>\n</ul>\n\n<h2 id=\"basics-git\">Basics Git</h2>\n\n<p>I leave you with this cheatsheet to help you to use the tool!</p>\n\n<p><img src=\"/resources/content/cheatsheet-git.jpg\" alt=\"Git Workflow\" width=\"1200\" height=\"900\" /></p>\n\n<p>if you want to find out more about the tool, I recommend you to go to the official website by clicking <a href=\"https://git-scm.com/\">HERE</a></p>\n\n<h2 id=\"enjoy\"><strong>Enjoy!</strong></h2>\n","url":"/blog/basics-git","relative_path":"_posts/2022-06-19-Basics-git.markdown","permalink":null},{"draft":false,"categories":[],"layout":"post","title":"Basics Linux","description":"Discover help commands for working with the terminal in linux.","date":"2022-06-19 14:01:35 +0200","image":"/resources/posts/basics-linux.png","tags":["Linux","Guide","Basics"],"slug":"Basic-linux-commands","ext":".markdown","excerpt":"<p>A Linux-based system is a modular <strong>Unix-like operating system</strong>, deriving much of its basic design from principles established in Unix during the 1970s and 1980s.</p>\n","content":"<p>A Linux-based system is a modular <strong>Unix-like operating system</strong>, deriving much of its basic design from principles established in Unix during the 1970s and 1980s.</p>\n\n<blockquote>\n  <p><strong>Linus Benedict Torvalds</strong> is a software engineer, known for initiating and maintaining the development of the <strong>Linux Kernel</strong>, based on the free operating system <a href=\"https://en.wikipedia.org/wiki/Minix\">Minix</a> created by Andrew S. Tanenbaum and on some tools, various utilities and compilers developed by the <a href=\"https://en.wikipedia.org/wiki/GNU\"><strong>GNU</strong></a> project. He is currently responsible for the coordination of the project. He has also developed the version control software <strong>Git</strong>.</p>\n</blockquote>\n\n<p>Linux allows a user to control every aspect of the operating system, is an <strong>open-source</strong> system and it allows a user to <strong>modify its source code</strong> (even source code of applications) itself as per the user requirements. Linux allows the user to install only the desired software nothing else.</p>\n\n<p><img src=\"https://media.giphy.com/media/SmaYvew52UlC9MmB6l/giphy.gif\" alt=\"Linux\" width=\"1200\" height=\"900\" /></p>\n\n<h2 id=\"design\">Design</h2>\n\n<p>Such a system uses a monolithic kernel, the Linux kernel, which handles <strong>process control, networking, access to the peripherals, and file systems</strong>. Device drivers are either integrated directly with the kernel, or added as modules that are loaded while the system is running. The Project’s implementation of the <strong>C library</strong> works as a wrapper for the <strong>system calls</strong> of the Linux kernel necessary to the kernel-userspace interface, the <strong>toolchain</strong> is a broad collection of programming tools vital to Linux development (including the compilers used to build the Linux kernel itself), and the <strong>coreutils</strong> implement many basic <strong>Unix tools</strong>. The project also develops <strong>Bash</strong>, a popular CLI shell. The graphical user interface (or GUI) used by most Linux systems is built on top of an implementation of the <strong>X11 Window System</strong>.</p>\n\n<table>\n  <tr>\n    <td>\n      <center><p><strong>User mode</strong></p></center>\n    </td>\n    <td>\n      <center><p>\n      User applications<br />\n      System components<br />\n      C standard library\n      </p></center>\n    </td>\n  </tr>\n  <tr>\n    <td>\n      <center><p><strong>Kernel Mode</strong></p></center>\n    </td>\n    <td>\n      <center><p>Linux kernel</p></center>\n    </td>\n  </tr>\n  </table>\n<table>\n  <tr>\n    <td>\n      <center><p><strong>Hardware</strong> (CPU, main memory, data storage devices, etc.)</p></center>\n    </td>\n  </tr>\n</table>\n\n<blockquote>\n  <p>GNU/Linux operating systems can run in both <strong>graphical and console mode</strong>, since the graphical environment is not explicitly linked to the rest of the system management programs and can be used optionally. The console is common in server distributions, while the <strong>graphical interface is oriented to the end user, both home and business</strong>. The most popular desktops in Linux are: <strong>GNOME, KDE Plasma, LXQt, Xfce, MATE and Cinnamon</strong>, although there are many more,</p>\n</blockquote>\n\n<h2 id=\"distributions\">Distributions</h2>\n\n<p><img src=\"/resources/posts/unix-time.png\" alt=\"Unix Timeline\" width=\"1200\" height=\"900\" /></p>\n\n<p>A Linux distribution is a software distribution based on the Linux kernel that includes software packages to meet the needs of a specific group of users, giving rise to home, enterprise and server editions. The most famous distribution is <strong>Ubuntu</strong>, which has been one of those that have made Linux famous in the world and comparable to other systems such as <strong>Windows or MacOS</strong>, but Ubuntu would not exist without <strong>Debian</strong>, one of the oldest and largest distributions from which <a href=\"https://en.wikipedia.org/wiki/Canonical_(company)\">Canonical</a> was based to develop Ubuntu.</p>\n\n<h2 id=\"main-gnulinux-distributions\"><strong>Main GNU/Linux distributions</strong>:</h2>\n\n<center>\n  <table>\n    <tr>\n      <td>\n        <center>\n        <img src=\"/resources/images/logos/ubuntux64.png\" />\n        <a href=\"https://ubuntu.com/download\">\n        <h4>Ubuntu</h4></a>\n        </center>\n      </td>\n      <td>\n        <center>\n        <img src=\"/resources/images/logos/debianx64.png\" />\n        <a href=\"https://www.debian.org/distrib/\">\n        <h4>Debian</h4></a>\n        </center>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <center>\n        <img src=\"/resources/images/logos/fedorax64.png\" />\n        <a href=\"https://getfedora.org/es/workstation/download/\">\n        <h4>Fedora</h4></a>\n        </center>\n      </td>\n      <td>\n        <center>\n        <img src=\"/resources/images/logos/manjarox64.png\" />\n        <a href=\"https://manjaro.org/download/\">\n        <h4>Manjaro</h4></a>\n        </center>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <center>\n        <img src=\"/resources/images/logos/kalix64.png\" />\n        <a href=\"https://www.kali.org/get-kali/\">\n        <h4>Kali</h4></a>\n        </center>\n      </td>\n      <td>\n        <center>\n        <img src=\"/resources/images/logos/archx64.png\" />\n        <a href=\"https://archlinux.org/download/\">\n        <h4>ArchLinux</h4></a>\n        </center>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <center>\n        <img src=\"/resources/images/logos/parrotx64.png\" />\n        <a href=\"https://www.parrotsec.org/download/\">\n        <h4>Parrot</h4></a>\n        </center>\n      </td>\n      <td>\n        <center>\n        <img src=\"/resources/images/logos/osusex64.png\" />\n        <a href=\"https://get.opensuse.org/\">\n        <h4>OpenSUSE</h4></a>\n        </center>\n      </td>\n    </tr>\n  </table>\n</center>\n","url":"/blog/basic-linux-commands","relative_path":"_posts/2022-07-06-Basic-linux-commands.markdown","permalink":null}],"pages":[{"draft":false,"categories":[],"layout":"default","title":"About","content_blocks":[{"_bookshop_name":"page-heading","title":"About me","description":null},{"_bookshop_name":"page-image","image":"/resources/images/img_avatar02.jpg","image_alt":"My best photo"},{"_bookshop_name":"content","content_html":"<p>Hello my name is <strong>Daniel</strong>, I am passionate about each and every one of the branches of computer science, \n  I work every day to expand my knowledge in this incredible universe.  Within my formation I had the opportunity \n  to study <strong>Architecture</strong>, in which I learned principles of design, art, history, drawing, calculus, \n  logic and many other skills which gave me a base to introduce me in what I currently call my favorite hobby, <strong>Software Development</strong>.\n  <br><br>\n  For about 2 years I have been working as a <strong>System Administrator</strong> and <strong>Developer</strong>, i studying every day and discovering \n  more and more the areas of the computer science coming to the conclusion that the best is <strong>Cybersecurity</strong>.\n</p> <center><img src=https://media.giphy.com/media/3oEjHECc1GftirnHZm/giphy.gif width=600 height=520/></center> <blockquote>\n  <p>\n    Is it possible to have a 100% secure system? \n  That's what I asked myself at the time.... \n  And today I am still asking myself that question.\n  </p>\n</blockquote> <hr> <center><h1>Education</h1></center> <p>\n  I am currently studying at <strong>42Madrid</strong> together with its incredible community, \n  developing projects and helping to improve and innovate technology in all its aspects.\n</p> <center><img src=/resources/images/42-Madrid.jpg width=717 height=291/></center> <blockquote>\n  <center>\n    <p>\n      This is my progress as a student at <a href=\"https://www.42madrid.com/\">42Madrid</a>.\n    </p>\n    <br>\n    <img src=\"https://badge42.vercel.app/api/v2/cl4osmqtg006109jvtxcd7k3u/stats?cursusId=21&coalitionId=65\" alt=\"lgomes-o's 42 stats\" />\n    <p><br>\n      Check the source code of my projects in <a href=\"https://github.com/goldcod3\">Github</a>\n    </p>\n  </center>\n</blockquote> <hr> <center><h1>Skills</h1></center> <p>\n  I have the ability to interact with management and line level personnel, communication skills, commitment, \n  analytical skills, proactivity, teamwork and self-taught culture.\n</p> <center>\n  <img src=\"https://media.giphy.com/media/3ov9jNziFTMfzSumAw/giphy.gif\" width=717 height=291/>\n</center><br>\n<center>\n  <h3>Programming languages</h3>\n  <p>\n    I develop in <strong>Python, C, Java, SQL-PL/SQL, HTML</strong>.\n  </p>\n  <img src=\"/resources/images/logos/pythonx64.png\"/>\n  <img src=\"/resources/images/logos/javax64.png\"/>\n  <img src=\"/resources/images/logos/cx64.png\"/>\n  <img src=\"/resources/images/logos/mysqlx64.png\"/>\n  <img src=\"/resources/images/logos/html5x64.png\"/>\n</center> <br><br> <center>\n  <h3>Operating Systems - Virtualization</h3>\n</center> <p>\n  Experience in systems <strong>Unix [Debian, Kali, ArchLinux, Ubuntu], Windows and MacOs</strong>,\n  and virtualization tools such as <strong>VirtualBox, VMware and Docker</strong>\n</p> <center>\n  <img src=\"/resources/images/logos/linuxx64.png\"/>\n  <img src=\"/resources/images/logos/windowsx64.png\"/>\n  <img src=\"/resources/images/logos/applex64.png\"/>\n  <img src=\"/resources/images/logos/vboxx64.png\"/>\n  <img src=\"/resources/images/logos/vmwarex64.png\"/>\n  <img src=\"/resources/images/logos/dockerx64.png\"/>\n</center> <br><br> <center>\n  <h3>Other Skills</h3>\n</center> <p>\n  Experience in software development environments such as <strong>Visual Studio Code, Vim, Intellij Idea, \n  Eclipse and Pycharm</strong>, managing projects under <strong>Git</strong>.\n</p> <center>\n  <img src=\"/resources/images/logos/vscodex64.png\"/>\n  <img src=\"/resources/images/logos/vimx64.png\"/>\n  <img src=\"/resources/images/logos/intellijx64.png\"/>\n  <img src=\"/resources/images/logos/eclipsex64.png\"/>\n  <img src=\"/resources/images/logos/pycharmx64.png\"/>\n  <img src=\"/resources/images/logos/gitx64.png\"/>\n</center> <br> <p> \n  I also have knowledge in the development of <strong>Wordpress</strong> web pages and the configuration of <strong>Hosting Servers and domains</strong>. \n  As a <strong>Sysadmin</strong>, i have been in charge of the <strong>assembly and configuration of computer equipment, servers \n  and other network devices</strong>, as well as the maintenance and updating of the <strong>networks</strong> \n  of different types of companies.\n</p> <center>\n  <img src=\"https://media.giphy.com/media/m12EDnP8xGLy8/giphy.gif\"/>\n  <p><br>\n    <strong>RnJvbSBlZmZvcnQgY29tZXMgdGhlIGJlc3QgcHJpemVzISA=</strong>   \n    <--[<a href=\"https://www.base64decode.org/\">Base64</a>]\n  </p>\n</center> <hr> <center><h1>Contact</h1></center> <center> <p>\n  Contact me through my <strong>social networks</strong> or send me an email at \n  <strong>devgomesld@gmail.com</strong>, greetings!\n</p> </center>"}],"slug":"about","ext":".html","tags":[],"excerpt":"","date":"2022-10-14 20:36:36 +0200","content":"","url":"/about/","relative_path":"_pages/about.html","permalink":null},{"draft":false,"categories":[],"layout":"default","title":"Blog","content_blocks":[{"_bookshop_name":"page-heading","title":"Blog","description":"Productivity, tips, guides and strategies for be a better coder!"},{"_bookshop_name":"posts-list","show_posts":true}],"slug":"blog","ext":".html","tags":[],"excerpt":"","date":"2022-10-14 20:36:36 +0200","content":"","url":"/blog/","relative_path":"_pages/blog.html","permalink":null},{"draft":false,"categories":[],"layout":"default","permalink":"/","title":"Home","content_blocks":[{"_bookshop_name":"hero","title":"Hi i'm Daniel!","description_html":"<p>\n  <strong>Developer</strong> and <strong>System Administrator</strong>. \n  I am dedicated to study, research and develop different areas of computer science and technology, \n  but my main goal is to become a <strong>Cybersecurity Specialist</strong>.<br>\n  Welcome to my personal portfolio, check out my <strong>works</strong> \n  and articles of interest on my <strong>blog</strong>!\n</p>","image":"/resources/images/img_avatar.png","image_alt":"Daniel","cta_button":"About me","cta_button_link":"about","works_button":"See my works","works_button_link":"#projects"},{"_bookshop_name":"projects-section","title":"Latest Projects","description_html":"<p>\n  These are the last projects, i have made them with a focus on creativity, simplicity, \n  functionality and above all on the passion for technology! Enjoy it!\n</p>","link_url":"/projects","show_projects":true},{"_bookshop_name":"blog-section","title":"Recent Posts","description_html":"<p>\n  These are my latest posts, where i share ideas, guides, tools, news of interest \n  and much more!\n</p>","link_url":"/blog","show_posts":true}],"slug":"index","ext":".html","tags":[],"excerpt":"","date":"2022-10-14 20:36:36 +0200","content":"","url":"/","relative_path":"_pages/index.html"},{"draft":false,"categories":[],"layout":"default","title":"Projects","content_blocks":[{"_bookshop_name":"page-heading","title":"My works","description":null},{"_bookshop_name":"projects-list","show_projects":true}],"slug":"projects","ext":".html","tags":[],"excerpt":"","date":"2022-10-14 20:36:36 +0200","content":"","url":"/projects/","relative_path":"_pages/projects.html","permalink":null}],"projects":[{"draft":false,"categories":[],"layout":"project","date":"2022-07-26 07:20:35 +0200","title":"Ft_printf - 42Madrid","subtitle":"Reprogram the printf() function.","image":"https://media.giphy.com/media/bi6RQ5x3tqoSI/giphy.gif","slug":"Proyect-ft_printf","ext":".md","tags":[],"excerpt":"<h1 id=\"ft_printf\">Ft_printf</h1>\n<p>Function ft_printf developed in 42Madrid.</p>\n","content":"<h1 id=\"ft_printf\">Ft_printf</h1>\n<p>Function ft_printf developed in 42Madrid.</p>\n\n<p>Resume: The objective of this project is to reprogram the printf() function and learn how to use a variable number of arguments.</p>\n\n<p>The <strong>printf()</strong> function sends a formatted string to the standard output (the display). This string can display formatted variables and special control characters, such as new lines (‘\\n’), backspaces (‘\\b’) and tabspaces (‘\\t’).</p>\n\n<p>The parameters passed into printf() are known as arguments; these are separated commas. C Program contains a printf() statement with only one argument, that is, a text string. This string is referred to as the message string and is always the first argument of printf(). It can contain special control characters and/or parameter conversion control characters.</p>\n\n<p>Conversion control characters describe the format of how the message string uses the other arguments. If printf() contains more than one argument then the format of the output is defined using a <strong>percent</strong> (<code class=\"language-plaintext highlighter-rouge\">%</code>) character followed by a format description character. A signed integer uses the <code class=\"language-plaintext highlighter-rouge\">%d</code> conversion control characters, an unsigned integer <code class=\"language-plaintext highlighter-rouge\">%u</code>. A floating point value uses the <code class=\"language-plaintext highlighter-rouge\">%f</code> conversion control characters, while scientific notation uses <code class=\"language-plaintext highlighter-rouge\">%e</code>.</p>\n\n<p>Original syntax:</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>int printf(const char* format, ...);\n</code></pre></div></div>\n\n<center>\n<img src=\"/resources/images/projects/printf01.jpg\" />\n</center>\n\n<p>Check the <a href=\"https://man7.org/linux/man-pages/man3/printf.3.html\">manual</a> of printf()!</p>\n\n<h3 id=\"variable-functions\">Variable Functions</h3>\n<p>Variadic functions are functions that can take a variable number of arguments. In C programming, a variadic function adds flexibility to the program. A fixed argument is required and then any number of arguments can be passed. The variadic function consists of at least one fixed variable and then an ellipsis (…) as the last parameter.</p>\n\n<p>Syntax:</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>int function_name(data_type variable_name, ...);\n</code></pre></div></div>\n\n<p>The values of the arguments passed can be accessed through the header file named <code class=\"language-plaintext highlighter-rouge\">#include &lt;stdarg.h&gt;</code> which includes the following methods:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Method</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code class=\"language-plaintext highlighter-rouge\">va_list lst</code></td>\n      <td>Contains the information needed by va_start , va_arg , va_end and va_copy.</td>\n    </tr>\n    <tr>\n      <td><code class=\"language-plaintext highlighter-rouge\">va_start (va_list ap, argN)</code></td>\n      <td>Initializes the structure <code class=\"language-plaintext highlighter-rouge\">va_list</code>. This allows access to the arguments of the varied function.</td>\n    </tr>\n    <tr>\n      <td><code class=\"language-plaintext highlighter-rouge\">va_arg (va_list ap, data_type)</code></td>\n      <td>This accesses the next argument of the varied function.</td>\n    </tr>\n    <tr>\n      <td><code class=\"language-plaintext highlighter-rouge\">va_copy (va_list dest, va_list src)</code></td>\n      <td>This makes a copy of the arguments of the variadic function.</td>\n    </tr>\n    <tr>\n      <td><code class=\"language-plaintext highlighter-rouge\">va_end (va_list ap)</code></td>\n      <td>This ends the path of the arguments of the varied function.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Check the <a href=\"https://en.wikipedia.org/wiki/Stdarg.h\">manual</a> of <code class=\"language-plaintext highlighter-rouge\">&lt;stdarg.h&gt;</code>!</p>\n\n<hr />\n<h2 id=\"project\">Project</h2>\n\n<center>\n<img src=\"https://media.giphy.com/media/26tn33aiTi1jkl6H6/giphy.gif\" />\n</center>\n\n<p>A static library must be created using the ‘<a href=\"https://github.com/goldcod3/Libft\">libft</a>’ library and include the printf() function.</p>\n\n<p>Check the source code <a href=\"https://github.com/goldcod3/Ft_printf/\"><strong>here</strong></a>!</p>\n\n<h3 id=\"compile-options\">Compile Options:</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ make\n</code></pre></div></div>\n<p>The <strong>make</strong> rule will compile the whole library generating a static library ‘libftprintf.a’ containing all the functions of the project.</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ make clean\n</code></pre></div></div>\n<p>The <strong>clean</strong> rule will delete all objects created to compile the library ‘libftprintf.a’.</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ make fclean\n</code></pre></div></div>\n<p>The <strong>fclean</strong> rule will delete all created objects and the ‘libftprintf.a’ file that has been previously compiled.</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ make re\n</code></pre></div></div>\n<p>The <strong>re</strong> rule will remove all compiled objects and files (if any) and recompile the library.</p>\n\n<hr />\n<p>Finished project.</p>\n\n<p><img src=\"https://badge42.vercel.app/api/v2/cl4osmqtg006109jvtxcd7k3u/project/2770513\" alt=\"lgomes-o's 42 ft_printf Score\" /></p>\n","url":"/project/proyect-ft-printf","relative_path":"_projects/2022-09-02-Proyect-ft_printf.md","permalink":null},{"draft":false,"categories":[],"layout":"project","date":"2022-07-27 07:20:35 +0200","title":"Arachnida - 42Madrid","subtitle":"Web Scraper - Metadata.","image":"https://media.giphy.com/media/3oz8xC4rcE2A7onfoc/giphy.gif","slug":"Proyect-Arachnida","ext":".md","tags":[],"excerpt":"<h1 id=\"arachnida\">Arachnida</h1>\n<p>Web scraper and metadata display tool developed in the cybersecurity bootcamp at 42Madrid.</p>\n","content":"<h1 id=\"arachnida\">Arachnida</h1>\n<p>Web scraper and metadata display tool developed in the cybersecurity bootcamp at 42Madrid.</p>\n\n<p>The purpose of this project is to create two tools that will allow you to automatically extract information from the web and then analyze it to learn about sensitive data.</p>\n\n<p>The <strong>Spider</strong> program will allow you to extract all the images, pdf and docx files from a website, recursively, by providing a url as a parameter. Such tools are called <strong>WebScraper</strong>!</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Web_scraping\"><strong>Web scraping</strong></a> tools are software, bots programmed to examine databases and extract information. A wide variety of bot types are used, many of them fully customizable to:</p>\n<ul>\n  <li>Recognize unique HTML site structures.</li>\n  <li>Extract and transform content.</li>\n  <li>Store data.</li>\n  <li>Extract data from APIs.</li>\n</ul>\n\n<center>\n<img src=\"/resources/images/projects/arachnida01.jpg\" />\n</center>\n\n<p>The second <strong>Scorpion</strong> program will receive image files as parameters and will be able to analyze them for <a href=\"https://en.wikipedia.org/wiki/Exif\">EXIF</a> data and other metadata, displaying them on screen. \nIt will support at least the same extensions that spider handles. It shall display basic attributes such as date of creation as well as other EXIF data.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Metadata\"><strong>Metadata</strong></a> is information that is used to describe other data, it is essentially data about data and is used in images and documents and can reveal sensitive information about those who have created or manipulated it.</p>\n\n<p>To run the python script you must install the requirements indicated in the file ‘requirements.txt’</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip install -r requirements.txt\n</code></pre></div></div>\n\n<p>Check the source code <a href=\"https://github.com/goldcod3/Arachnida\">here</a>!</p>\n\n<hr />\n<h2 id=\"project\"><strong>Project</strong></h2>\n\n<h2 id=\"spider\">Spider</h2>\n<center>\n<img src=\"https://media.giphy.com/media/n8cIlujV4OoClykKMt/giphy.gif\" width=\"400\" heigth=\"400\" />\n</center>\n\n<h3 id=\"options\">Options</h3>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Recursive mode\npython3 spider.py -r &lt;URL&gt;\n\n# Recursive mode + level depth\npython3 spider.py -r &lt;URL&gt; -l &lt;Nº&gt;\n\n# Recursive mode +  directory download path\npython3 spider.py -r &lt;URL&gt; -p &lt;PATH&gt;\n\n# Recursive mode + Silent output\npython3 spider.py -r &lt;URL&gt; -S\n\n# File mode \npython3 spider.py -f &lt;URL-RESOURCE&gt;\n\n# Print help message\npython3 spider.py -h\n</code></pre></div></div>\n\n<p>When running the tool the <strong>/data</strong> folder and the <strong>/logs</strong> folder are generated in the repository directory, /data contains the files downloaded from the target website and /logs contains the log of actions.</p>\n\n<hr />\n<h2 id=\"scorpion\">Scorpion</h2>\n<center>\n<img src=\"https://media.giphy.com/media/5n3ZO8jVcAQow/giphy.gif\" width=\"400\" heigth=\"400\" />\n</center>\n\n<h3 id=\"options-1\">Options</h3>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Resources mode\npython3 scorpion.py FILE1 FILE2 FILE3 ...\n\n# Directory mode\npython3 scorpion.py -d &lt;DIRECTORY-PATH&gt;\n</code></pre></div></div>\n\n<hr />\n<h2 id=\"run-docker-test\">Run Docker Test</h2>\n\n<ul>\n  <li>Install ‘<a href=\"https://www.docker.com/products/docker-desktop/\">Docker Desktop</a>’ and run the app.</li>\n  <li>Install ‘make’ and use the Makefile for buid a container and get a bash:</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>make &amp;&amp; make exec\n</code></pre></div></div>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Build image and container\n-&gt;&gt; make\n# Get a bash from container\n-&gt;&gt; make exec\n# Build a new container\n-&gt;&gt; make dock\n# Build image\n-&gt;&gt; make image\n# Remove image and container\n-&gt;&gt; make fclean\n</code></pre></div></div>\n\n<p>In the user’s /home directory inside the container, two directories are generated and synchronized with the directories of both tools by means of volumes.</p>\n\n<hr />\n<p>Finished project.</p>\n\n<p><img src=\"https://badge42.vercel.app/api/v2/cl4osmqtg006109jvtxcd7k3u/project/2726915\" alt=\"lgomes-o's 42 arachnida Score\" /></p>\n","url":"/project/proyect-arachnida","relative_path":"_projects/2022-08-10-Proyect-Arachnida.md","permalink":null},{"draft":false,"categories":[],"layout":"project","date":"2022-07-28 07:20:35 +0200","title":"Ft_otp - 42Madrid","subtitle":"Two-factor authentication - TOTP.","image":"https://media.giphy.com/media/Q952xrE3uUK8e2PPAM/giphy-downsized-large.gif","slug":"Proyect-ft-otp","ext":".md","tags":[],"excerpt":"<p>Secure TOTP password generator.</p>\n","content":"<p>Secure TOTP password generator.</p>\n\n<p>This is a project developed in the cursus of <strong>42Madrid</strong>.</p>\n\n<h1 id=\"subject\">Subject:</h1>\n\n<p>In this project, the objective is to implement a TOTP system (Time-based One-Time Password), which is able to generate ephemeral passwords from a master key.</p>\n\n<h3 id=\"bonus-part\">Bonus Part:</h3>\n<ul>\n  <li>Allow to choose the encryption password of the master key ft_otp.key and request it each time a new temporary password is generated.</li>\n  <li>Develop a client that generates the master password and validates the results with a graphical interface.</li>\n  <li>Any other feature that you consider useful.</li>\n</ul>\n\n<h1 id=\"project\">Project</h1>\n\n<p>To understand the project it is necessary to read and understand the articles of the RFC:</p>\n<ul>\n  <li><a href=\"https://datatracker.ietf.org/doc/html/rfc6238#section-4\">TOTP</a></li>\n  <li><a href=\"https://datatracker.ietf.org/doc/html/rfc4226\">HOTP</a></li>\n  <li><a href=\"https://datatracker.ietf.org/doc/html/rfc2104\">HMAC</a></li>\n</ul>\n\n<p>These have helped me to form the algorithm to develop understanding that:</p>\n\n<p>TOTP uses the HOTP algorithm, replacing the counter with a non-decreasing value based on the current time <strong>CT</strong>:</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Time-based_one-time_password\"><strong>TOTP</strong></a> value(K) = truncated(<a href=\"https://en.wikipedia.org/wiki/HMAC-based_one-time_password\"><strong>HOTP</strong></a> value(<strong>K</strong>, <strong>CT</strong>))</p>\n\n<p>When the tool is executed, a <strong>6-digit pin</strong> is obtained which can be verified from another client application that shares the <strong>secret key</strong> and the <strong>timer</strong>.</p>\n\n<center>\n<img src=\"https://www.protectimus.com/blog/wp-content/uploads/2020/06/TOTP-algorithm-explained.png\" />\n</center>\n<p><br /></p>\n\n<p>TOTP key <a href=\"https://cryptography.io/en/latest/fernet/\"><strong>encryption</strong></a> was performed and some <strong>useful options</strong> were added as indicated in the bonus.</p>\n\n<p>In the <strong>src</strong> directory of the repository, you can find the source code made in python and you will be able to modify the algorithm parameters.</p>\n\n<p>The <strong>ft_otp(debian).zip</strong> file in the directory <strong>out</strong> contains a script with its dependencies for Linux systems which will run without the need of <strong>python3</strong>.</p>\n\n<h1 id=\"script-options\">Script Options</h1>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Generate a new TOTP key/pin\n./ft_otp -k ft_otp.key\n\n# Save a new key [hexadecimal - 64 characters] ft_otp.key.\n./ft_otp -g key.hex\n\n# Change the encryption Base64 password of the 'ft_otp.key' file\n./ft_otp -p P_l1F4g7hC5o3UWD273fcCmVJrfeCDVEG3D4aDCXaCI=\n\n# Interactive mode TOTP\n./ft_otp -k ft_otp.key -i SECONDS\n\n# Generate a 64-character hexadecimal random key in a 'key.hex' file.\n./ft_otp -rk\n\n# Generate a Base64 random password.\n./ft_otp -rp\n\n# Print help message\n./ft_otp -h\n</code></pre></div></div>\n<p><br /></p>\n\n<h1 id=\"docker-test\">Docker test</h1>\n<p>A Dockerfile has been configured that generates a docker container with the software dependencies, \nto speed up the deployment of the container a <strong>Makefile</strong> was configured.</p>\n\n<ol>\n  <li>Clone the repository\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git clone https://github.com/goldcod3/Ft_otp.git\n</code></pre></div>    </div>\n  </li>\n  <li>Install <a href=\"https://www.docker.com/products/docker-desktop/\">Docker Desktop</a> and run the app.</li>\n  <li>Install ‘make’ and use the Makefile for buid a container and get a bash:\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>make &amp;&amp; make exec\n</code></pre></div>    </div>\n    <p><br /></p>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Build image and container\n-&gt;&gt; make\n# Get a bash from container\n-&gt;&gt; make exec\n# Build a new container\n-&gt;&gt; make dock\n# Build image\n-&gt;&gt; make image\n# Remove image and container\n-&gt;&gt; make fclean\n</code></pre></div>    </div>\n  </li>\n  <li>When you are <strong>inside</strong> the container, two volumes will be created synchronizing the <strong>src</strong> and <strong>out</strong> with the user’s <strong>/home</strong> directory, \nallowing code editing and execution.</li>\n</ol>\n\n<center>\n<img src=\"https://media.giphy.com/media/IgLIVXrBcID9cExa6r/giphy.gif\" />\n</center>\n\n<p><strong>Enjoy it!</strong></p>\n\n<p>View the source code <a href=\"https://github.com/goldcod3/Ft_otp\">here</a></p>\n\n<hr />\n<p><strong>Project completed</strong></p>\n\n<p><strong>Rating:</strong>\n<img src=\"https://badge42.vercel.app/api/v2/cl4osmqtg006109jvtxcd7k3u/project/2706267\" alt=\"lgomes-o's 42 ft_otp Score\" /></p>\n","url":"/project/proyect-ft-otp","relative_path":"_projects/2022-08-03-Proyect-ft-otp.md","permalink":null},{"draft":false,"categories":[],"layout":"project","date":"2022-07-29 12:40:25 +0200","title":"Stockholm - 42Madrid","subtitle":"Ransomware.","image":"https://media.giphy.com/media/damUMYvgrroqw2hxSu/giphy.gif","slug":"Proyect-stockholm","ext":".md","tags":[],"excerpt":"<p>Encrypt and decrypt multiple files and directories.</p>\n","content":"<p>Encrypt and decrypt multiple files and directories.</p>\n\n<p>This is a project developed in the cybersecurity bootcamp of <strong>42Madrid</strong>.</p>\n\n<h3 id=\"warning\"><strong><em>WARNING:</em></strong></h3>\n<ul>\n  <li>This program was written for educational purposes. The responsibility for the use and distribution of the tool lies with the user. Use it at your own risk and enjoy!</li>\n  <li>This program was designed to affect only files located in the current user’s ‘~/infection’ directory [for now]. Use caution with files located in that directory, you may not recover them.</li>\n  <li>When the files are encrypted, a ‘totem.key’ file is generated, which contains the encryption password. To encrypt several times different files with the same key, do not move this file from its location.</li>\n  <li>It is recommended to run the program in a docker container or a virtual machine.</li>\n</ul>\n\n<center>\n<strong>[Don't lose the totem.key]</strong>\n<br />\n<img src=\"https://media.giphy.com/media/gKsJUddjnpPG0/giphy.gif\" />\n</center>\n\n<hr />\n\n<h1 id=\"subject\">Subject:</h1>\n\n<p>The goal of this project is to make a small program capable of causing big problems.</p>\n\n<p>Although the greatest virtue of ransomware is its ability to spread across networks of hundreds of computers, in this case\nhundreds of computers, in this case, the program will affect a ‘small’ part of your files.</p>\n\n<p>The program must be developed for Linux or Macos systems, affecting all files located in the <strong>/home/$user/infection</strong> directory and all files with extensions that were affected by the <strong>WannaCry</strong> virus. A secure encryption algorithm must be used to encrypt the files and they must be renamed with the extension <strong>‘.ft’</strong> once encrypted.</p>\n\n<h1 id=\"project\">Project:</h1>\n\n<p>The program was developed using the <strong>Python</strong> programming language and testing was performed in a docker container to avoid risks.</p>\n\n<p>To encrypt the files, the Python <strong>cryptography</strong> module was used, which implements <a href=\"https://cryptography.io/en/latest/fernet/\"><strong>Fernet</strong></a> that uses the <a href=\"https://es.wikipedia.org/wiki/Advanced_Encryption_Standard\"><strong>AES</strong></a> encryption algorithm.</p>\n\n<blockquote>\nThe <strong>Advanced Encryption Standard</strong>, abbreviated to AES, is used to encrypt data and protect it against unauthorized access. The cryptographic method uses a key of varying length for this purpose and is called <strong>AES-128, AES-192 or AES-256</strong>, depending on the key length used.\n<br />\nIt is one of the most secure encryption methods, used publicly and privately by companies, organizations and governments such as the <strong>NSA</strong>.\n</blockquote>\n\n<p>The software <strong>scans the /infection directory</strong> and all subdirectories within it for files matching the extensions to be encrypted. The result of the search is a list of target files and then it proceeds to <strong>encrypt</strong> each of them.</p>\n\n<p>When the <strong>decryption</strong> option is executed, a scan of the same path will also be performed in search of files that have been previously encrypted and have <strong>not been modified by the user</strong>, and then decrypted one by one.</p>\n\n<center>\n<img src=\"https://media.giphy.com/media/P7PmvHY6kzAqY/giphy.gif\" />\n</center>\n<p><br /></p>\n\n<p>To really see the speed and power of the tool it is recommended to use the ‘<strong>–silent</strong>’ parameter, which does not generate any output.</p>\n\n<hr />\n\n<h1 id=\"script-options\">Script Options</h1>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Default mode - Encrypt files\n- ./stockholm \n# Reverse mode - Decrypt files\n- ./stockholm -r + 'pass_key'\n# Silent mode\n- ./stockholm -s | ./stockholm -r + 'pass_key' -s\n# Print version\n- ./stockholm -v\n# Print help\n- ./stockholm -h\n</code></pre></div></div>\n<p><br /></p>\n\n<h1 id=\"docker-test\">Docker test</h1>\n<ul>\n  <li>Install <a href=\"https://www.docker.com/products/docker-desktop/\">Docker Desktop</a> and run the app.</li>\n  <li>Install <strong>make</strong> and use the Makefile for buid a container and get a bash:\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>make &amp;&amp; make exec\n</code></pre></div>    </div>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Build image and container\n-&gt;&gt; make\n# Get a bash from container\n-&gt;&gt; make exec\n# Build a new container\n-&gt;&gt; make dock\n# Build image\n-&gt;&gt; make image\n# Remove image and container\n-&gt;&gt; make fclean\n</code></pre></div>    </div>\n  </li>\n  <li>In the container, run <strong>run_test.sh</strong>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>cd; cd test; ./run_test.sh\n</code></pre></div>    </div>\n  </li>\n  <li>Unzip the <strong>out.zip</strong> and run <strong>stockholm</strong>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>unzip out.zip \ncd out; ./stockholm\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<center>\n<img src=\"https://media.giphy.com/media/8EmeieJAGjvUI/giphy.gif\" />\n</center>\n\n<p><strong>Enjoy it!</strong></p>\n\n<p>View the source code <a href=\"https://github.com/goldcod3/Stockholm\">here</a></p>\n\n<hr />\n<p><strong>Project completed</strong></p>\n\n<p><strong>Rating:</strong>\n<img src=\"https://badge42.vercel.app/api/v2/cl4osmqtg006109jvtxcd7k3u/project/2669379\" alt=\"lgomes-o's 42 stockholm Score\" /></p>\n","url":"/project/proyect-stockholm","relative_path":"_projects/2022-07-26-Proyect-stockholm.md","permalink":null},{"draft":false,"categories":[],"layout":"project","date":"2022-07-30 07:20:35 +0200","title":"Ft_onion - 42Madrid","subtitle":"Web Hidden Server.","image":"https://media.giphy.com/media/kE54wc0PNxtVJeARb5/giphy.gif","slug":"Proyect-ft-onion","ext":".md","tags":[],"excerpt":"<p>Introduction to the hidden services of the Tor network.</p>\n","content":"<p>Introduction to the hidden services of the Tor network.</p>\n\n<p>This is a project developed in the cybersecurity bootcamp of 42Madrid.</p>\n\n<h1 id=\"subject\">Subject:</h1>\n\n<p>The objective of this project is to create a <strong>web page</strong> and make it accessible from the <strong>Tor network</strong> by creating a hidden service.</p>\n\n<p>The <strong>hidden service</strong> is a web service that is hidden in the Tor network,\nBut what is <a href=\"https://www.torproject.org/\"><strong>Tor</strong></a>?</p>\n\n<blockquote>\n<strong>Tor is an application</strong> that takes the data that enters and exits through your Internet connection and passes it through a circuit of servers around the world. This <strong>makes your traffic completely anonymous</strong>.\n<br />\nA little-known use of Tor is anonymous access to the <strong>Deep Web or Darknet</strong>, a little-known part of the Internet, inaccessible from search engines such as Google, and hosting <strong>content of often questionable legality</strong>.\n</blockquote>\n\n<h3 id=\"requirements\">Requirements:</h3>\n<ul>\n  <li>The <strong>HTTP</strong> service must have a static web site with a single <strong><em>index.html</em></strong> file and will only be accessible from a url xxxxxxxxx.onion.</li>\n  <li>A <strong>Nginx</strong> service will be used to configure the web server.</li>\n  <li>The page can be accessed via <strong>HTTP</strong> through port <strong>80</strong>.</li>\n  <li>The access to the server via <strong>SSH</strong> on port <strong>4242</strong> must be enabled.</li>\n  <li>No other ports should be opened and no firewall rules should be set.</li>\n</ul>\n\n<h3 id=\"files-to-submit\"><strong>Files to submit</strong>:</h3>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>index.html\nnginx.conf\nsshd_config\ntorrc\n</code></pre></div></div>\n<p><br /></p>\n<h3 id=\"bonus-part\">Bonus part:</h3>\n<ul>\n  <li>SSH fortification.</li>\n  <li>An interactive website, more impressive than a sad static page. You can use external libraries for it, but not a framework.</li>\n</ul>\n\n<hr />\n\n<h1 id=\"project\">Project:</h1>\n<p>This project was developed with <a href=\"https://www.docker.com/\">docker</a> containers to perform all the connection and configuration tests,\nwithout damaging the system. It has a <strong>Server</strong> container and a <strong>Client</strong> container.</p>\n<ul>\n  <li>The Server executes the necessary services and configurations.</li>\n  <li>The Client was created to perform SSH connection tests to the configured hidden service.</li>\n</ul>\n\n<center>\n<img src=\"https://media.giphy.com/media/citBl9yPwnUOs/giphy.gif\" />\n</center>\n\n<h2 id=\"server\">Server</h2>\n\n<p>Based on a debian docker container generated by the following Dockerfile:</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>FROM debian:latest\n\n# Installation packages\nRUN apt-get update -y &amp;&amp; apt upgrade -y\nRUN apt-get install nginx tor openssh-server vim -y\n\n# Copy sshd_config file\nCOPY sshd_config /etc/ssh/sshd_config\n\n# Copy torrc file\nCOPY torrc /etc/tor/torrc\n\n# Copy index.html file\nCOPY index.html /usr/share/nginx/html/index.html\n\n# COPY nginx file\nCOPY nginx.conf /etc/nginx/nginx.conf\n\n# SSH user configuration\nRUN useradd -m sshusr\nRUN echo \"sshusr:onion\" | chpasswd\n\n# Service startup.\nENTRYPOINT service ssh start; nginx; tor  \n</code></pre></div></div>\n<p><br /></p>\n\n<p><strong>The following packages are installed and configured</strong>:</p>\n<ul>\n  <li><strong>Nginx</strong> [port 80:80].</li>\n  <li><strong>Openssh-server</strong> (Server) [port 4242:4242].</li>\n  <li><strong>Tor</strong></li>\n</ul>\n\n<p>With the <strong>COPY</strong> commands that are indicated in the Dockerfile, the files are sent to the directory paths where they should replace the original files, loading the requested settings.</p>\n\n<p><strong>The following steps were followed to enable all services:</strong></p>\n<ul>\n  <li>A static test website was developed according to the requirements of the subject in an <strong>index.html</strong> file.</li>\n  <li>By editing the <strong>torrc</strong> file we enabled the hidden services for HTTP and SSH.</li>\n  <li>The <strong>nginx.conf</strong> file was configured to enable the web server and host a previously developed static web page.</li>\n  <li>By modifying the <strong>sshd_config</strong> file we changed the default port and fortified the security of the SSH server.</li>\n</ul>\n\n<p>In addition to installing the necessary applications and copying the configuration files into the container, <strong>an user is created</strong> which has the privileges to access the SSH service when fortifying. <strong>[user=sshusr, pass=onion]</strong></p>\n\n<center>\n<img src=\"https://media.giphy.com/media/EFXGvbDPhLoWs/giphy.gif\" />\n</center>\n\n<h2 id=\"client\">Client:</h2>\n\n<p>Based on a debian docker container generated by the following Dockerfile:</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>FROM debian:latest\n\n# Installation packages\nRUN apt-get update -y &amp;&amp; apt-get upgrade -y\nRUN apt-get install tor ssh -y\n\n# Service startup.\nENTRYPOINT service ssh start; tor\n</code></pre></div></div>\n<p><br /></p>\n\n<p><strong>The following packages are installed</strong>:</p>\n<ul>\n  <li><strong>Ssh</strong> (Client)</li>\n  <li><strong>Tor</strong></li>\n</ul>\n\n<p>To speed up the deployment and execution of the containers, a Makefile was configured with the following instructions:</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>- make:        Generates the Server container, the Client container and both images.\n- make server: Generates the Server container image.\n- make client: Generates the image of the Client container.\n- make exe:    Runs the Client container and returns a Bash.\n- make clean:  Stops and removes the Server and Client containers. \n</code></pre></div></div>\n<p><br /></p>\n\n<p>When executing the server, a Volume is generated in the Server container synchronizing the directory <strong>/url</strong>, this will return the directories where the <strong>hostname</strong> files are located, these contain the url’s <strong>xxxxxxxxx.onion</strong> for the HTTP and SSH.</p>\n<ul>\n  <li><strong>hidden_service</strong> -&gt; HTTP</li>\n  <li><strong>other_hidden_service</strong> -&gt; SSH</li>\n</ul>\n\n<hr />\n\n<h1 id=\"docker-test\">Docker test</h1>\n\n<h3 id=\"dependencies\">Dependencies:</h3>\n<ul>\n  <li>You must have <a href=\"https://www.docker.com/products/docker-desktop/\"><strong>Docker Desktop</strong></a> and <strong>make</strong> [optional] installed on your computer.</li>\n  <li>You must also have <a href=\"https://www.torproject.org/es/download\"><strong>Tor</strong></a> browser installed for the HTTP test.</li>\n</ul>\n\n<h3 id=\"execution-instructions\">Execution Instructions:</h3>\n<ol>\n  <li>Clone the repository\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git clone https://github.com/goldcod3/Ft_onion.git\n</code></pre></div>    </div>\n  </li>\n  <li>Inside the cloned repository run:\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>make &amp;&amp; make exec\n</code></pre></div>    </div>\n  </li>\n  <li>The Server container generates in the <strong>srv/url</strong> directory the HTTP and SSH urls for the hidden tor services.\n    <ul>\n      <li><strong>srv/url/hidden_service/hostname -&gt; HTTP</strong></li>\n      <li><strong>srv/url/other_hidden_service/hostname -&gt; SSH</strong></li>\n    </ul>\n  </li>\n</ol>\n\n<h3 id=\"access-to-the-services\"><strong>Access to the Services:</strong></h3>\n<ul>\n  <li>To access the <strong>HTTP</strong> service, you must run the <strong>Tor browser</strong> and enter the url found in <strong>srv/url/hidden_service/hostname</strong>\nin the repository folder.</li>\n  <li>To access the <strong>SSH</strong> service run the Client container and inside the container run the command:\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>torify ssh sshusr@xxxxxxxxx.onion -p 4242\n</code></pre></div>    </div>\n    <p>Where:</p>\n    <ul>\n      <li>The user’s name is <strong>[sshusr]</strong>.</li>\n      <li>The user’s password is <strong>[onion]</strong>.</li>\n      <li>The port of the SSH connection is <strong>[4242]</strong>.</li>\n      <li>The url xxxxxxxxx.onion is located in <strong>srv/url/other_hidden_service/hostname</strong> within the repository.</li>\n    </ul>\n  </li>\n</ul>\n\n<center>\n<img src=\"https://media.giphy.com/media/11Hid00JjX2ql2/giphy.gif\" />\n</center>\n\n<p><strong>Enjoy it!</strong></p>\n\n<p>View the source code <a href=\"https://github.com/goldcod3/Ft_onion\">here</a></p>\n\n<hr />\n<p><strong>Project completed</strong></p>\n\n<p><strong>Rating:</strong>\n<img src=\"https://badge42.vercel.app/api/v2/cl4osmqtg006109jvtxcd7k3u/project/2661741\" alt=\"lgomes-o's 42 ft_onion Score\" /></p>\n","url":"/project/proyect-ft-onion","relative_path":"_projects/2022-07-14-Proyect-ft-onion.md","permalink":null},{"draft":false,"categories":[],"layout":"project","date":"2022-07-31 07:20:35 +0200","title":"Gest_next_line - 42Madrid","subtitle":"Read from File Descriptor.","image":"https://media.giphy.com/media/3o84srlFElFgKejXFu/giphy.gif","slug":"Proyect-get-next-line","ext":".md","tags":[],"excerpt":"<p>Function returning a line read from a file descriptor developed with the C programming language.</p>\n","content":"<p>Function returning a line read from a file descriptor developed with the C programming language.</p>\n\n<p>This is a project developed in the cursus of <strong>42Madrid</strong>.</p>\n\n<h1 id=\"subject\">Subject:</h1>\n\n<table>\n  <tbody>\n    <tr>\n      <td>Function name</td>\n      <td>get_next_line</td>\n    </tr>\n    <tr>\n      <td>Prototype</td>\n      <td>char *get_next_line(int fd);</td>\n    </tr>\n    <tr>\n      <td>Files to be delivered</td>\n      <td>get_next_line.c, get_next_line_utils.c, get_next_line.h</td>\n    </tr>\n    <tr>\n      <td>Parameters</td>\n      <td>fd: File descriptor to read from</td>\n    </tr>\n    <tr>\n      <td>Value returned</td>\n      <td>If all goes well: the read line <br />In case of failure or if reading ends: NULL</td>\n    </tr>\n    <tr>\n      <td>Allowed functions</td>\n      <td>read, malloc, free</td>\n    </tr>\n    <tr>\n      <td>Description</td>\n      <td>Writes a function that returns the line read from a file descriptor.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Calling the get_next_line function repeatedly (for example, using a <strong>loop</strong>) will allow you to read the contents of the file to which the file descriptor points, <strong>line by line</strong>, all the way to the end.</p>\n\n<center>\n<img src=\"https://media.giphy.com/media/3oEdvcbU0yVPFRBQAM/giphy.gif\" />\n</center>\n<p><br /></p>\n\n<p><strong>Bonus</strong>: Your get_next_line has to be able to handle multiple fd at once.</p>\n\n<h1 id=\"project\">Project</h1>\n\n<p>To develop the project you must know what a <a href=\"https://en.wikipedia.org/wiki/File_descriptor\"><strong>File descriptor</strong></a> is, which is more than</p>\n\n<blockquote>\nA number that uniquely identifies an open file in a computer's operating system. It describes a data resource, and how that resource may be accessed.\n</blockquote>\n\n<p>On a Unix-like operating system, the first three file descriptors, by default:</p>\n\n<table>\n  <tbody>\n    <tr>\n      <td><strong>Name</strong></td>\n      <td><strong>File descriptor</strong></td>\n      <td><strong>Description</strong></td>\n      <td><strong>Abbreviation</strong></td>\n    </tr>\n    <tr>\n      <td>Standard input</td>\n      <td>0</td>\n      <td>The default data stream for input, for example in a command pipeline. In the terminal, this defaults to keyboard input from the user.</td>\n      <td>stdin</td>\n    </tr>\n    <tr>\n      <td>Standard output</td>\n      <td>1</td>\n      <td>The default data stream for output, for example when a command prints text. In the terminal, this defaults to the user’s screen.</td>\n      <td>stdout</td>\n    </tr>\n    <tr>\n      <td>Standard error</td>\n      <td>2</td>\n      <td>The default data stream for output that relates to an error occurring. In the terminal, this defaults to the user’s screen.</td>\n      <td>stderr</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>In addition, it would not hurt to study the <strong>open() read()</strong> c\n functions.</p>\n<ul>\n  <li>The <a href=\"https://manpages.ubuntu.com/manpages/trusty/man2/open.2.html\"><strong>open()</strong></a> function opens an existing file, returning a file descriptor. \n  <br />\n  <strong>int</strong> <strong><em>open</em></strong> (const char *pathname, int flags);</li>\n  <li>The <a href=\"https://manpages.ubuntu.com/manpages/trusty/man2/read.2.html\"><strong>read()</strong></a> function is responsible for reading the contents of a file descriptor, returning a <strong>buffer</strong>.\n  <br />\n  <strong>size_t</strong> <strong><em>read</em></strong> ( int filedescriptor, void* buffer, unsigned bytes );</li>\n</ul>\n\n<blockquote>\nThe <strong>buffer</strong> parameter is a pointer to the memory area where the transfer is to take place. That is, where the <strong>data</strong> will be read from in the read function.\n</blockquote>\n\n<p>Knowing this I have developed the function, see the source code <a href=\"https://github.com/goldcod3/Get_next_line\"><strong>here</strong></a></p>\n\n<center>\n<img src=\"https://media.giphy.com/media/M9IRNeiR1mahpdZ8yE/giphy.gif\" />\n</center>\n\n<hr />\n<p><strong>Project completed</strong></p>\n\n<p><strong>Rating:</strong>\n<img src=\"https://badge42.vercel.app/api/v2/cl4osmqtg006109jvtxcd7k3u/project/2646255\" alt=\"lgomes-o's 42 get_next_line Score\" /></p>\n","url":"/project/proyect-get-next-line","relative_path":"_projects/2022-07-09-Proyect-get-next-line.md","permalink":null},{"draft":false,"categories":[],"layout":"project","date":"2022-08-01 07:20:35 +0200","title":"Libft - 42Madrid","subtitle":"Library of Functions.","image":"https://media.giphy.com/media/3oxRmoTueKDmUguzL2/giphy.gif","slug":"Proyect-libft","ext":".md","tags":[],"excerpt":"<p>Library of basic functions developed with the C programming language.</p>\n","content":"<p>Library of basic functions developed with the C programming language.</p>\n\n<p>This is a project developed in the cursus of <strong>42Madrid</strong>.</p>\n\n<h1 id=\"subject\">Subject:</h1>\n\n<p>This project consists of programming a library in C.\nThe library will have many general-purpose functions that will support the following programs to be developed during the cursus.</p>\n\n<h3 id=\"technical-considerations\">Technical considerations</h3>\n<ul>\n  <li>Declaring global variables is prohibited.</li>\n  <li>If you need to separate a complex function into several, be sure to use the word\n<strong>static</strong> for this. This way, the functions will stay in the appropriate file.</li>\n  <li>It is forbidden to give away unused files.</li>\n  <li>All .c files must be compiled with the <strong>-Wall -Werror -Wextra</strong> flags.</li>\n  <li>You must use the ar command to generate the library. The use of <strong>libtool is forbidden</strong>.</li>\n</ul>\n\n<h3 id=\"part-1\">Part 1:</h3>\n<p>You will have to redo some libc functions. Your functions will have the same prototypes\nwill have the same prototypes and implement the same behaviors as the original functions. They should be as described by the man. The only difference will be the nomenclature.\nThey will start with the prefix “ft_”. For example, strlen will become ft_strlen.</p>\n\n<table>\n  <tbody>\n    <tr>\n      <td>isalpha</td>\n      <td>toupper</td>\n    </tr>\n    <tr>\n      <td>isdigit</td>\n      <td>tolower</td>\n    </tr>\n    <tr>\n      <td>isalnum</td>\n      <td>strchr</td>\n    </tr>\n    <tr>\n      <td>isascii</td>\n      <td>strrchr</td>\n    </tr>\n    <tr>\n      <td>isprint</td>\n      <td>strncmp</td>\n    </tr>\n    <tr>\n      <td>strlen</td>\n      <td>memchr</td>\n    </tr>\n    <tr>\n      <td>memset</td>\n      <td>memcmp</td>\n    </tr>\n    <tr>\n      <td>bzero</td>\n      <td>strnstr</td>\n    </tr>\n    <tr>\n      <td>memcpy</td>\n      <td>atoi</td>\n    </tr>\n    <tr>\n      <td>memmove</td>\n      <td>calloc</td>\n    </tr>\n    <tr>\n      <td>strlcpy</td>\n      <td>strdup</td>\n    </tr>\n    <tr>\n      <td>strlcat</td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"part-2\">Part 2:</h3>\n<p>In this second part, you will have to develop a set of functions that are either not from the libc library, or are but in a different form.</p>\n\n<table>\n  <tbody>\n    <tr>\n      <td>ft_substr</td>\n      <td>ft_strjoin</td>\n    </tr>\n    <tr>\n      <td>ft_strtrim</td>\n      <td>ft_split</td>\n    </tr>\n    <tr>\n      <td>ft_itoa</td>\n      <td>ft_strmapi</td>\n    </tr>\n    <tr>\n      <td>ft_striteri</td>\n      <td>ft_putchar_fd</td>\n    </tr>\n    <tr>\n      <td>ft_putstr_fd</td>\n      <td>ft_putendl_fd</td>\n    </tr>\n    <tr>\n      <td>ft_putnbr_fd</td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"bonus-part\">Bonus Part:</h3>\n<p>The functions to manipulate memory and strings are very useful… But you will soon discover that list manipulation is even more so.\nYou should use the following structure to represent a node in your list. Add the declaration to your libft.h file:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>typedef struct s_list\n{\n    void *content;\n    struct s_list *next;\n}   t_list;\n</code></pre></div></div>\n\n<p>The members of the t_list structure are:</p>\n<ul>\n  <li><strong>content</strong>: the information contained by the node.<br />\n<strong>void</strong> *: allows to store any type of information.</li>\n  <li><strong>next</strong>: the address of the next node, or NULL if the next node is the last one.</li>\n</ul>\n\n<p>Implement the following functions to easily use your lists:</p>\n\n<table>\n  <tbody>\n    <tr>\n      <td>ft_lstnew</td>\n      <td>ft_lstadd_front</td>\n    </tr>\n    <tr>\n      <td>ft_lstsize</td>\n      <td>ft_lstlast</td>\n    </tr>\n    <tr>\n      <td>ft_lstadd_back</td>\n      <td>ft_lstdelone</td>\n    </tr>\n    <tr>\n      <td>ft_lstclear</td>\n      <td>ft_lstiter</td>\n    </tr>\n    <tr>\n      <td>ft_lstmap</td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<hr />\n\n<h1 id=\"project\">Project</h1>\n\n<p>The whole project was done fulfilling all its requirements, delivering also a <strong>Makefile</strong> which compiles a static library <strong>libft.a</strong> with all the developed functions.</p>\n\n<p>View the source code <a href=\"https://github.com/goldcod3/Libft\">here</a></p>\n\n<center>\n<img src=\"https://media.giphy.com/media/fsXOS3oBboiYf6fSsY/giphy.gif\" />\n</center>\n\n<hr />\n<p><strong>Project completed</strong></p>\n\n<p><strong>Rating:</strong>\n<img src=\"https://badge42.vercel.app/api/v2/cl4osmqtg006109jvtxcd7k3u/project/2620046\" alt=\"lgomes-o's 42 Libft Score\" /></p>\n","url":"/project/proyect-libft","relative_path":"_projects/2022-06-22-Proyect-libft.md","permalink":null}],"testimonials":[],"data":{"author":{"author_name":"goldcod3","author_image":"/resources/images/img_avatar.png"},"footer":{"footer_menu__settings":null,"copyright_text_html":"<p> 2022 - goldcod3 </p>"},"general_settings":{"title":"Daniel","description":"Portfolio of a Developer.","social_media_share_image":"/resources/images/img_avatar.png","disqus-identifier":null,"google-analytics":null},"navigation":{"logo_image":"/resources/images/ico_skull_yellow.png","menu__settings":{"menu__items":[{"title":"HOME","url":"/"},{"title":"PROJECTS","url":"/projects/"},{"title":"BLOG","url":"/blog/"},{"title":"ABOUT","url":"/about/"}]}},"newsletter":{"newsletter_title":"Join my mailing list","newsletter_description":"Get inspiration, updates and, cool stuff!","newsletter_identifier":"frnla.us6.list-manage.com/subscribe/post?u=6314d69a3f315af7ce3fb00a0&amp;id=3038727cc3","newsletter_button":"Subscribe"},"social_links":{"social":[{"icon":"Github","link":"https://github.com/goldcod3"},{"icon":"Twitter","link":"https://twitter.com/goldcod3"},{"icon":"linkedin","link":"https://linkedin.com/in/luisdanielgo"},{"icon":"Instagram","link":"https://instagram.com/goldcod3"}]}},"baseurl":null,"title":"Daniel"}}